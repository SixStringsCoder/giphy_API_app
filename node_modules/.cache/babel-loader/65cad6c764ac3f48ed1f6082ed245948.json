{"ast":null,"code":"import _classCallCheck from \"/Users/stevehanlon/coding/javascript/react/Treehouse courses/giphy_app/gif-search/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stevehanlon/coding/javascript/react/Treehouse courses/giphy_app/gif-search/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stevehanlon/coding/javascript/react/Treehouse courses/giphy_app/gif-search/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stevehanlon/coding/javascript/react/Treehouse courses/giphy_app/gif-search/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stevehanlon/coding/javascript/react/Treehouse courses/giphy_app/gif-search/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/stevehanlon/coding/javascript/react/Treehouse courses/giphy_app/gif-search/src/Components/SearchForm.js\";\nimport React, { Component } from 'react';\nimport { Consumer } from './Context';\n\nvar SearchForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchForm, _Component);\n\n  function SearchForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchText: '',\n      isStickers: false,\n      searchType: 'gifs'\n    };\n\n    _this.handleWhichSearch = function (e) {\n      _this.setState(function (prevState) {\n        return {\n          isStickers: !prevState.isStickers,\n          searchType: !prevState.isStickers ? 'stickers' : 'gifs'\n        };\n      });\n    };\n\n    _this.onSearchChange = function (e) {\n      _this.setState({\n        searchText: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.onSearch(_this.state.searchType, _this.state.searchText); // e.currentTarget.reset();\n\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchForm, [{\n    key: \"render\",\n    value: function render() {\n      var isStickers = this.state.isStickers;\n      return React.createElement(\"form\", {\n        className: \"search-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"switchArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"switch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleWhichSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"slider round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"h5\", {\n        className: \"autoWord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, isStickers ? \"STICKERS\" : \"GIFS\")), React.createElement(\"label\", {\n        className: \"is-hidden\",\n        htmlFor: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"input\", {\n        type: \"search\",\n        id: \"searchfield\",\n        onChange: this.onSearchChange,\n        name: \"search\",\n        placeholder: \"Search...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        id: \"submit\",\n        className: \"search-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons icon-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"search\")));\n    }\n  }]);\n\n  return SearchForm;\n}(Component);\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/stevehanlon/coding/javascript/react/Treehouse courses/giphy_app/gif-search/src/Components/SearchForm.js"],"names":["React","Component","Consumer","SearchForm","state","searchText","isStickers","searchType","handleWhichSearch","e","setState","prevState","onSearchChange","target","value","handleSubmit","preventDefault","props","onSearch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,WAAzB;;IAEMC,U;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,UAAU,EAAE,KAFN;AAGNC,MAAAA,UAAU,EAAE;AAHN,K;;UAMRC,iB,GAAoB,UAAAC,CAAC,EAAI;AACvB,YAAKC,QAAL,CAAe,UAAAC,SAAS,EAAI;AAC1B,eAAO;AACPL,UAAAA,UAAU,EAAE,CAACK,SAAS,CAACL,UADhB;AAEPC,UAAAA,UAAU,EAAE,CAACI,SAAS,CAACL,UAAX,GAAwB,UAAxB,GAAqC;AAF1C,SAAP;AAID,OALD;AAMD,K;;UAEDM,c,GAAiB,UAAAH,CAAC,EAAI;AACpB,YAAKC,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAEI,CAAC,CAACI,MAAF,CAASC;AAAvB,OAAd;AACD,K;;UAEDC,Y,GAAe,UAAAN,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACO,cAAF;;AACA,YAAKC,KAAL,CAAWC,QAAX,CAAoB,MAAKd,KAAL,CAAWG,UAA/B,EAA2C,MAAKH,KAAL,CAAWC,UAAtD,EAFkB,CAGlB;;AACD,K;;;;;;;6BAEQ;AAAA,UACCC,UADD,GACgB,KAAKF,KADrB,CACCE,UADD;AAEP,aACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAE,KAAKS,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAE,KAAKP,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BF,UAAU,GAAG,UAAH,GAAgB,MAApD,CALF,CADF,EASE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,OAAO,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAUE;AAAO,QAAA,IAAI,EAAC,QAAZ;AACO,QAAA,EAAE,EAAC,aADV;AAEO,QAAA,QAAQ,EAAE,KAAKM,cAFtB;AAGO,QAAA,IAAI,EAAC,QAHZ;AAIO,QAAA,WAAW,EAAC,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,EAAE,EAAC,QAAzB;AAAkC,QAAA,SAAS,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAfF,CADF;AAqBD;;;;EAlDsBX,S;;AAqDzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Consumer } from './Context';\n\nclass SearchForm extends Component {\n\n  state = {\n    searchText: '',\n    isStickers: false,\n    searchType: 'gifs'\n  }\n\n  handleWhichSearch = e => {\n    this.setState( prevState => {\n      return {\n      isStickers: !prevState.isStickers,\n      searchType: !prevState.isStickers ? 'stickers' : 'gifs'\n      }\n    });\n  }\n\n  onSearchChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSearch(this.state.searchType, this.state.searchText);\n    // e.currentTarget.reset();\n  }\n\n  render() {\n    const { isStickers } = this.state;\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit} >\n        <div id=\"switchArea\">\n          <label className=\"switch\">\n            <input type=\"checkbox\" onChange={this.handleWhichSearch} />\n            <span className=\"slider round\"></span>\n          </label>\n          <h5 className=\"autoWord\">{isStickers ? \"STICKERS\" : \"GIFS\"}</h5>\n        </div>\n\n        <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\n        <input type=\"search\"\n               id=\"searchfield\"\n               onChange={this.onSearchChange}\n               name=\"search\"\n               placeholder=\"Search...\" />\n        <button type=\"submit\" id=\"submit\" className=\"search-button\">\n          <i className=\"material-icons icon-search\">search</i>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}